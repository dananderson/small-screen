/*
 * Copyright (C) 2018 Daniel Anderson
 *
 * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.
 */

import bindings from 'bindings'
import os from 'os'

// TODO: this is a mix of sdl and native helper functions.. organize the native module
export const SDL = bindings('small-screen')

SDL.SDL_INIT_TIMER = 0x00000001
SDL.SDL_INIT_AUDIO = 0x00000010
SDL.SDL_INIT_VIDEO = 0x00000020
SDL.SDL_INIT_JOYSTICK = 0x00000200
SDL.SDL_INIT_HAPTIC = 0x00001000
SDL.SDL_INIT_GAMECONTROLLER = 0x00002000
SDL.SDL_INIT_EVENTS = 0x00004000
SDL.SDL_INIT_NOPARACHUTE = 0x00100000
SDL.SDL_INIT_EVERYTHING = (SDL.SDL_INIT_TIMER | SDL.SDL_INIT_AUDIO | SDL.SDL_INIT_VIDEO |
  SDL.SDL_INIT_EVENTS | SDL.SDL_INIT_JOYSTICK | SDL.SDL_INIT_HAPTIC | SDL.SDL_INIT_GAMECONTROLLER)

SDL.SDL_WINDOWPOS_UNDEFINED = 0x1FFF0000
SDL.SDL_WINDOWPOS_CENTERED = 0x2FFF0000

SDL.SDL_WindowFlags = {
  SDL_WINDOW_FULLSCREEN: 1,
  SDL_WINDOW_OPENGL: 2,
  SDL_WINDOW_SHOWN: 4,
  SDL_WINDOW_HIDDEN: 8,
  SDL_WINDOW_BORDERLESS: 16,
  SDL_WINDOW_RESIZABLE: 32,
  SDL_WINDOW_MINIMIZED: 64,
  SDL_WINDOW_MAXIMIZED: 128,
  SDL_WINDOW_INPUT_GRABBED: 256,
  SDL_WINDOW_INPUT_FOCUS: 512,
  SDL_WINDOW_MOUSE_FOCUS: 1024,
  SDL_WINDOW_FULLSCREEN_DESKTOP: 4097,
  SDL_WINDOW_FOREIGN: 2048,
  SDL_WINDOW_ALLOW_HIGHDPI: 8192,
  SDL_WINDOW_MOUSE_CAPTURE: 16384
}

SDL.SDL_Event = {
  size: 56
}

SDL.SDL_TextureAccess = {
  SDL_TEXTUREACCESS_STATIC: 0,
  SDL_TEXTUREACCESS_STREAMING: 1,
  SDL_TEXTUREACCESS_TARGET: 2
}

SDL.SDL_RendererFlags = {
  SDL_RENDERER_SOFTWARE: 1,
  SDL_RENDERER_ACCELERATED: 2,
  SDL_RENDERER_PRESENTVSYNC: 4,
  SDL_RENDERER_TARGETTEXTURE: 8
}

SDL.SDL_BlendMode = {
  SDL_BLENDMODE_NONE: 0,
  SDL_BLENDMODE_BLEND: 1,
  SDL_BLENDMODE_ADD: 2,
  SDL_BLENDMODE_MOD: 4
}

SDL.SDL_PIXELTYPE_UNKNOWN = 0
SDL.SDL_PIXELTYPE_INDEX1 = 1
SDL.SDL_PIXELTYPE_INDEX4 = 2
SDL.SDL_PIXELTYPE_INDEX8 = 3
SDL.SDL_PIXELTYPE_PACKED8 = 4
SDL.SDL_PIXELTYPE_PACKED16 = 5
SDL.SDL_PIXELTYPE_PACKED32 = 6
SDL.SDL_PIXELTYPE_ARRAYU8 = 7
SDL.SDL_PIXELTYPE_ARRAYU16 = 8
SDL.SDL_PIXELTYPE_ARRAYU32 = 9
SDL.SDL_PIXELTYPE_ARRAYF16 = 10
SDL.SDL_PIXELTYPE_ARRAYF32 = 11

SDL.SDL_BITMAPORDER_NONE = 0
SDL.SDL_BITMAPORDER_4321 = 1
SDL.SDL_BITMAPORDER_1234 = 2

SDL.SDL_BITMAPORDER_NONE = 0
SDL.SDL_BITMAPORDER_4321 = 1
SDL.SDL_BITMAPORDER_1234 = 2

SDL.SDL_PACKEDORDER_NONE = 0
SDL.SDL_PACKEDORDER_XRGB = 1
SDL.SDL_PACKEDORDER_RGBX = 2
SDL.SDL_PACKEDORDER_ARGB = 3
SDL.SDL_PACKEDORDER_RGBA = 4
SDL.SDL_PACKEDORDER_XBGR = 5
SDL.SDL_PACKEDORDER_BGRX = 6
SDL.SDL_PACKEDORDER_ABGR = 7
SDL.SDL_PACKEDORDER_BGRA = 8

SDL.SDL_ARRAYORDER_NONE = 0
SDL.SDL_ARRAYORDER_RGB = 1
SDL.SDL_ARRAYORDER_RGBA = 2
SDL.SDL_ARRAYORDER_ARGB = 3
SDL.SDL_ARRAYORDER_BGR = 4
SDL.SDL_ARRAYORDER_BGRA = 5
SDL.SDL_ARRAYORDER_ABGR = 6

SDL.SDL_PACKEDLAYOUT_NONE = 0
SDL.SDL_PACKEDLAYOUT_332 = 1
SDL.SDL_PACKEDLAYOUT_4444 = 2
SDL.SDL_PACKEDLAYOUT_1555 = 3
SDL.SDL_PACKEDLAYOUT_5551 = 4
SDL.SDL_PACKEDLAYOUT_565 = 5
SDL.SDL_PACKEDLAYOUT_8888 = 6
SDL.SDL_PACKEDLAYOUT_2101010 = 7
SDL.SDL_PACKEDLAYOUT_1010102 = 8

SDL.SDL_FOURCC = (a, b, c, d) => ((a << 0) & 0xFF) | ((b << 8) & 0xFF) | ((c << 16) & 0xFF) | ((d << 24) & 0xFF)
SDL.SDL_DEFINE_PIXELFOURCC = SDL.SDL_FOURCC
SDL.SDL_DEFINE_PIXELFORMAT = (type, order, layout, bits, bytes) =>
  ((1 << 28) | ((type) << 24) | ((order) << 20) | ((layout) << 16) | ((bits) << 8) | ((bytes) << 0))

SDL.SDL_PIXELFORMAT_UNKNOWN = 0
SDL.SDL_PIXELFORMAT_INDEX1LSB = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_INDEX1, SDL.SDL_BITMAPORDER_4321, 0, 1, 0)
SDL.SDL_PIXELFORMAT_INDEX1MSB = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_INDEX1, SDL.SDL_BITMAPORDER_1234, 0, 1, 0)
SDL.SDL_PIXELFORMAT_INDEX4LSB = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_INDEX4, SDL.SDL_BITMAPORDER_4321, 0, 4, 0)
SDL.SDL_PIXELFORMAT_INDEX4MSB = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_INDEX4, SDL.SDL_BITMAPORDER_1234, 0, 4, 0)
SDL.SDL_PIXELFORMAT_INDEX8 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_INDEX8, 0, 0, 8, 1)
SDL.SDL_PIXELFORMAT_RGB332 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED8, SDL.SDL_PACKEDORDER_XRGB, SDL.SDL_PACKEDLAYOUT_332, 8, 1)
SDL.SDL_PIXELFORMAT_RGB444 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_XRGB, SDL.SDL_PACKEDLAYOUT_4444, 12, 2)
SDL.SDL_PIXELFORMAT_RGB555 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_XRGB, SDL.SDL_PACKEDLAYOUT_1555, 15, 2)
SDL.SDL_PIXELFORMAT_BGR555 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_XBGR, SDL.SDL_PACKEDLAYOUT_1555, 15, 2)
SDL.SDL_PIXELFORMAT_ARGB4444 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_ARGB, SDL.SDL_PACKEDLAYOUT_4444, 16, 2)
SDL.SDL_PIXELFORMAT_RGBA4444 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_RGBA, SDL.SDL_PACKEDLAYOUT_4444, 16, 2)
SDL.SDL_PIXELFORMAT_ABGR4444 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_ABGR, SDL.SDL_PACKEDLAYOUT_4444, 16, 2)
SDL.SDL_PIXELFORMAT_BGRA4444 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_BGRA, SDL.SDL_PACKEDLAYOUT_4444, 16, 2)
SDL.SDL_PIXELFORMAT_ARGB1555 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_ARGB, SDL.SDL_PACKEDLAYOUT_1555, 16, 2)
SDL.SDL_PIXELFORMAT_RGBA5551 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_RGBA, SDL.SDL_PACKEDLAYOUT_5551, 16, 2)
SDL.SDL_PIXELFORMAT_ABGR1555 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_ABGR, SDL.SDL_PACKEDLAYOUT_1555, 16, 2)
SDL.SDL_PIXELFORMAT_BGRA5551 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_BGRA, SDL.SDL_PACKEDLAYOUT_5551, 16, 2)
SDL.SDL_PIXELFORMAT_RGB565 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_XRGB, SDL.SDL_PACKEDLAYOUT_565, 16, 2)
SDL.SDL_PIXELFORMAT_BGR565 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED16, SDL.SDL_PACKEDORDER_XBGR, SDL.SDL_PACKEDLAYOUT_565, 16, 2)
SDL.SDL_PIXELFORMAT_RGB24 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_ARRAYU8, SDL.SDL_ARRAYORDER_RGB, 0, 24, 3)
SDL.SDL_PIXELFORMAT_BGR24 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_ARRAYU8, SDL.SDL_ARRAYORDER_BGR, 0, 24, 3)
SDL.SDL_PIXELFORMAT_RGB888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_XRGB, SDL.SDL_PACKEDLAYOUT_8888, 24, 4)
SDL.SDL_PIXELFORMAT_RGBX8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_RGBX, SDL.SDL_PACKEDLAYOUT_8888, 24, 4)
SDL.SDL_PIXELFORMAT_BGR888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_XBGR, SDL.SDL_PACKEDLAYOUT_8888, 24, 4)
SDL.SDL_PIXELFORMAT_BGRX8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_BGRX, SDL.SDL_PACKEDLAYOUT_8888, 24, 4)
SDL.SDL_PIXELFORMAT_ARGB8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_ARGB, SDL.SDL_PACKEDLAYOUT_8888, 32, 4)
SDL.SDL_PIXELFORMAT_RGBA8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_RGBA, SDL.SDL_PACKEDLAYOUT_8888, 32, 4)
SDL.SDL_PIXELFORMAT_ABGR8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_ABGR, SDL.SDL_PACKEDLAYOUT_8888, 32, 4)
SDL.SDL_PIXELFORMAT_BGRA8888 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_BGRA, SDL.SDL_PACKEDLAYOUT_8888, 32, 4)
SDL.SDL_PIXELFORMAT_ARGB2101010 = SDL.SDL_DEFINE_PIXELFORMAT(SDL.SDL_PIXELTYPE_PACKED32, SDL.SDL_PACKEDORDER_ARGB, SDL.SDL_PACKEDLAYOUT_2101010, 32, 4)

SDL.SDL_PIXELFORMAT_YV12 = SDL.SDL_DEFINE_PIXELFOURCC(0x59, 0x56, 0x31, 0x32)
SDL.SDL_PIXELFORMAT_IYUV = SDL.SDL_DEFINE_PIXELFOURCC(0x49, 0x59, 0x55, 0x56)
SDL.SDL_PIXELFORMAT_YUY2 = SDL.SDL_DEFINE_PIXELFOURCC(0x59, 0x55, 0x59, 0x32)
SDL.SDL_PIXELFORMAT_UYVY = SDL.SDL_DEFINE_PIXELFOURCC(0x55, 0x59, 0x56, 0x59)
SDL.SDL_PIXELFORMAT_YVYU = SDL.SDL_DEFINE_PIXELFOURCC(0x59, 0x56, 0x59, 0x55)
SDL.SDL_PIXELFORMAT_NV12 = SDL.SDL_DEFINE_PIXELFOURCC(0x4E, 0x56, 0x31, 0x32)
SDL.SDL_PIXELFORMAT_NV21 = SDL.SDL_DEFINE_PIXELFOURCC(0x4E, 0x56, 0x32, 0x31)
SDL.SDL_PIXELFORMAT_EXTERNAL_OES = SDL.SDL_DEFINE_PIXELFOURCC(0x4F, 0x45, 0x53, 0x20)

if (os.endianness() === 'LE') {
  SDL.SDL_PIXELFORMAT_RGBA32 = SDL.SDL_PIXELFORMAT_ABGR8888
  SDL.SDL_PIXELFORMAT_ARGB32 = SDL.SDL_PIXELFORMAT_BGRA8888
  SDL.SDL_PIXELFORMAT_BGRA32 = SDL.SDL_PIXELFORMAT_ARGB8888
  SDL.SDL_PIXELFORMAT_ABGR32 = SDL.SDL_PIXELFORMAT_RGBA8888
} else {
  SDL.SDL_PIXELFORMAT_RGBA32 = SDL.SDL_PIXELFORMAT_RGBA8888
  SDL.SDL_PIXELFORMAT_ARGB32 = SDL.SDL_PIXELFORMAT_ARGB8888
  SDL.SDL_PIXELFORMAT_BGRA32 = SDL.SDL_PIXELFORMAT_BGRA8888
  SDL.SDL_PIXELFORMAT_ABGR32 = SDL.SDL_PIXELFORMAT_ABGR8888
}
